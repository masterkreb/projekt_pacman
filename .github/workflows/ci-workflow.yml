name: Python-Qualitätssicherung

on: [push, pull_request]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Code aus dem Repository holen
        uses: actions/checkout@v4

      - name: 2. Python-Umgebung einrichten
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: 3. Abhängigkeiten installieren (inkl. Dev-Tools und Test-Dependencies)
        run: |
          pip install pygame pygame_gui
          pip install flake8 black
          pip install -r requirements-test.txt

      - name: 4. Code-Formatierung prüfen (black)
        # --check sorgt dafür, dass black einen Fehler wirft, wenn der Code nicht formatiert ist
        run: black . --check

      - name: 5. Code auf Stilfehler prüfen (flake8)
        run: flake8 .

      - name: 6. Unit-Tests ausführen (pytest)
        # Pytest mit Coverage-Report
        run: |
          python -m pytest tests/ -v --cov=pacman_game --cov-report=term-missing --cov-report=xml

      - name: 7. Coverage-Report hochladen
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
